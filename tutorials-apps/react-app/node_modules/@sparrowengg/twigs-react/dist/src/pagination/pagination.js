import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ChevronLeftIcon, ChevronRightIcon, EllipsisHorizontalIcon } from '@sparrowengg/twigs-react-icons';
import { useEffect, useId, useState } from 'react';
import { styled } from '../../stitches.config';
import { Box } from '../box';
import { Button, IconButton } from '../button';
import { usePagination } from '../hooks';
const StyledList = styled('ul', {
    display: 'flex',
    alignItems: 'center',
    gap: '$2'
});
const DOTS = 'DOTS';
/**
 * @param total total items inside pagination
 * @param itemsPerPage number of items in each age
 * @param activePage currently focused page
 * @param onChange returns click event and active page number
 */
export const Pagination = ({ total, itemsPerPage, activePage, siblingCount, onChange, size, ...rest }) => {
    const keyId = useId();
    const [page, setPage] = useState(activePage);
    const paginationRange = usePagination({
        totalItems: total, itemsPerPage, activePage: page, siblingCount
    });
    const changeActivePage = (event, newPage) => {
        setPage(newPage);
        if (onChange) {
            onChange(event, newPage);
        }
    };
    useEffect(() => {
        setPage(activePage);
    }, [activePage]);
    const isPrevDisabled = page === 1;
    const isNextDisabled = page === paginationRange?.[paginationRange?.length - 1];
    return (_jsx(Box, { as: "nav", "aria-label": "pagination", ...rest, children: _jsxs(StyledList, { children: [_jsx("li", { children: _jsx(IconButton, { icon: _jsx(ChevronLeftIcon, {}), "aria-disabled": isPrevDisabled, "aria-label": "Previous", color: "bright", size: size, disabled: isPrevDisabled, onClick: (event) => changeActivePage(event, page - 1) }) }), paginationRange?.map((pageNumber, index) => {
                    if (pageNumber === DOTS) {
                        return (
                        // eslint-disable-next-line react/no-array-index-key
                        _jsx("li", { children: _jsx(IconButton, { as: "a", icon: _jsx(EllipsisHorizontalIcon, {}), role: "presentation", color: "bright", size: size, css: {
                                    cursor: 'default'
                                } }) }, `pagination-dots-${keyId}-${index}`));
                    }
                    return (_jsx("li", { children: _jsx(Button, { as: "a", onClick: (event) => changeActivePage(event, Number(pageNumber)), "aria-label": `Page ${pageNumber}`, color: page === pageNumber ? 'default' : 'bright', "aria-current": page === pageNumber, role: "link", size: size, children: pageNumber }) }, `pagination-${keyId}-page-${pageNumber}`));
                }), _jsx("li", { children: _jsx(IconButton, { icon: _jsx(ChevronRightIcon, {}), "aria-label": "Next", color: "bright", size: size, disabled: isNextDisabled, "aria-disabled": isNextDisabled, onClick: (event) => changeActivePage(event, page + 1) }) })] }) }));
};
