import { jsx as _jsx } from "react/jsx-runtime";
import { isSameDay, isSameMonth } from '@internationalized/date';
import { useRef } from 'react';
import { useCalendarCell } from 'react-aria';
import { Day, DayContainer } from './calendar-day';
export const CalendarCell = ({ state, date, currentMonth }) => {
    const ref = useRef(null);
    const { cellProps, buttonProps, isSelected, formattedDate } = useCalendarCell({ date }, state, ref);
    const isOutsideMonth = !isSameMonth(currentMonth, date);
    let isSelectionStart = false;
    let isSelectionEnd = false;
    let isRangeCalendar = false;
    if ('highlightedRange' in state && state.highlightedRange) {
        isSelectionStart = isSameDay(date, state.highlightedRange.start);
        isSelectionEnd = isSameDay(date, state.highlightedRange.end);
        isRangeCalendar = true;
    }
    return (_jsx(DayContainer, { ...cellProps, "data-selection-start": isSelectionStart, "data-selection-end": isSelectionEnd, "data-in-range": isRangeCalendar && isSelected, children: _jsx(Day, { ...buttonProps, ref: ref, isHidden: isOutsideMonth, isSelected: isSelected, children: formattedDate }) }));
};
