import {useId as $aIvin$useId, useDescription as $aIvin$useDescription, filterDOMProps as $aIvin$filterDOMProps, mergeProps as $aIvin$mergeProps} from "@react-aria/utils";
import {useGridListItem as $aIvin$useGridListItem, useGridList as $aIvin$useGridList} from "@react-aria/gridlist";
import {useInteractionModality as $aIvin$useInteractionModality, useFocusWithin as $aIvin$useFocusWithin} from "@react-aria/interactions";
import {useLocalizedStringFormatter as $aIvin$useLocalizedStringFormatter, useLocale as $aIvin$useLocale} from "@react-aria/i18n";
import {useState as $aIvin$useState, useRef as $aIvin$useRef, useEffect as $aIvin$useEffect} from "react";
import {ListKeyboardDelegate as $aIvin$ListKeyboardDelegate} from "@react-aria/selection";
import {useField as $aIvin$useField} from "@react-aria/label";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 






const $d7323bca8d074eeb$export$653eddfc964b0f8a = new WeakMap();
function $d7323bca8d074eeb$export$4f8b5cda58b7e8ff(props, state, ref) {
    let { direction: direction  } = (0, $aIvin$useLocale)();
    let keyboardDelegate = props.keyboardDelegate || new (0, $aIvin$ListKeyboardDelegate)({
        collection: state.collection,
        ref: ref,
        orientation: "horizontal",
        direction: direction,
        disabledKeys: state.disabledKeys
    });
    let { labelProps: labelProps , fieldProps: fieldProps , descriptionProps: descriptionProps , errorMessageProps: errorMessageProps  } = (0, $aIvin$useField)({
        ...props,
        labelElementType: "span"
    });
    let { gridProps: gridProps  } = (0, $aIvin$useGridList)({
        ...props,
        ...fieldProps,
        keyboardDelegate: keyboardDelegate,
        shouldFocusWrap: true
    }, state, ref);
    let [isFocusWithin, setFocusWithin] = (0, $aIvin$useState)(false);
    let { focusWithinProps: focusWithinProps  } = (0, $aIvin$useFocusWithin)({
        onFocusWithinChange: setFocusWithin
    });
    let domProps = (0, $aIvin$filterDOMProps)(props);
    // If the last tag is removed, focus the container.
    let prevCount = (0, $aIvin$useRef)(state.collection.size);
    (0, $aIvin$useEffect)(()=>{
        if (prevCount.current > 0 && state.collection.size === 0 && isFocusWithin) ref.current.focus();
        prevCount.current = state.collection.size;
    }, [
        state.collection.size,
        isFocusWithin,
        ref
    ]);
    $d7323bca8d074eeb$export$653eddfc964b0f8a.set(state, {
        onRemove: props.onRemove
    });
    return {
        gridProps: (0, $aIvin$mergeProps)(gridProps, domProps, {
            role: state.collection.size ? "grid" : null,
            "aria-atomic": false,
            "aria-relevant": "additions",
            "aria-live": isFocusWithin ? "polite" : "off",
            ...focusWithinProps,
            ...fieldProps
        }),
        labelProps: labelProps,
        descriptionProps: descriptionProps,
        errorMessageProps: errorMessageProps
    };
}


var $3bb15cc24d006ec5$exports = {};
var $84925f526f90eebd$exports = {};
$84925f526f90eebd$exports = {
    "removeButtonLabel": `إزالة`,
    "removeDescription": `اضغط على مفتاح DELETE لإزالة علامة.`
};


var $c0650163dc1b6f9d$exports = {};
$c0650163dc1b6f9d$exports = {
    "removeButtonLabel": `Премахване`,
    "removeDescription": `Натиснете Delete, за да премахнете маркера.`
};


var $b2b55661291de587$exports = {};
$b2b55661291de587$exports = {
    "removeButtonLabel": `Odebrat`,
    "removeDescription": `Stisknutím klávesy Delete odeberete značku.`
};


var $deb83970956f6d5b$exports = {};
$deb83970956f6d5b$exports = {
    "removeButtonLabel": `Fjern`,
    "removeDescription": `Tryk på Slet for at fjerne tag.`
};


var $aea1cb4c7ec97e1c$exports = {};
$aea1cb4c7ec97e1c$exports = {
    "removeButtonLabel": `Entfernen`,
    "removeDescription": `Auf „Löschen“ drücken, um das Tag zu entfernen.`
};


var $3618d917e503a8d3$exports = {};
$3618d917e503a8d3$exports = {
    "removeButtonLabel": `Κατάργηση`,
    "removeDescription": `Πατήστε Διαγραφή για να καταργήσετε την ετικέτα.`
};


var $9eb56bbbe8e31294$exports = {};
$9eb56bbbe8e31294$exports = {
    "removeDescription": `Press Delete to remove tag.`,
    "removeButtonLabel": `Remove`
};


var $361c604b0fc269a3$exports = {};
$361c604b0fc269a3$exports = {
    "removeButtonLabel": `Quitar`,
    "removeDescription": `Pulse Eliminar para quitar la etiqueta.`
};


var $2f00170f4ee3ca01$exports = {};
$2f00170f4ee3ca01$exports = {
    "removeButtonLabel": `Eemalda`,
    "removeDescription": `Sildi eemaldamiseks vajutage kustutusklahvi Delete.`
};


var $80ee16b64fab9fb5$exports = {};
$80ee16b64fab9fb5$exports = {
    "removeButtonLabel": `Poista`,
    "removeDescription": `Poista tunniste painamalla Poista-painiketta.`
};


var $be9d354476c08087$exports = {};
$be9d354476c08087$exports = {
    "removeButtonLabel": `Supprimer`,
    "removeDescription": `Appuyez sur Supprimer pour supprimer l’étiquette.`
};


var $ffeb903ba092eb35$exports = {};
$ffeb903ba092eb35$exports = {
    "removeButtonLabel": `הסר`,
    "removeDescription": `לחץ על מחק כדי להסיר תג.`
};


var $1df6722c6f19728b$exports = {};
$1df6722c6f19728b$exports = {
    "removeButtonLabel": `Ukloni`,
    "removeDescription": `Pritisnite Delete za uklanjanje oznake.`
};


var $093d57e325bc9071$exports = {};
$093d57e325bc9071$exports = {
    "removeButtonLabel": `Eltávolítás`,
    "removeDescription": `Nyomja meg a Delete billentyűt a címke eltávolításához.`
};


var $609dbdfbcad85bdb$exports = {};
$609dbdfbcad85bdb$exports = {
    "removeButtonLabel": `Rimuovi`,
    "removeDescription": `Premi Elimina per rimuovere il tag.`
};


var $c08e84f882644048$exports = {};
$c08e84f882644048$exports = {
    "removeButtonLabel": `削除`,
    "removeDescription": `タグを削除するには、Delete キーを押します。`
};


var $5cd130489822fa21$exports = {};
$5cd130489822fa21$exports = {
    "removeButtonLabel": `제거`,
    "removeDescription": `태그를 제거하려면 Delete 키를 누르십시오.`
};


var $ab5183739b6c5e7e$exports = {};
$ab5183739b6c5e7e$exports = {
    "removeButtonLabel": `Pašalinti`,
    "removeDescription": `Norėdami pašalinti žymą, paspauskite „Delete“ klavišą.`
};


var $dd84a0b574be3f23$exports = {};
$dd84a0b574be3f23$exports = {
    "removeButtonLabel": `Noņemt`,
    "removeDescription": `Nospiediet Delete [Dzēst], lai noņemtu tagu.`
};


var $85eee97d14eef7b5$exports = {};
$85eee97d14eef7b5$exports = {
    "removeButtonLabel": `Fjern`,
    "removeDescription": `Trykk på Slett for å fjerne taggen.`
};


var $18781839f93b0314$exports = {};
$18781839f93b0314$exports = {
    "removeButtonLabel": `Verwijderen`,
    "removeDescription": `Druk op Verwijderen om de tag te verwijderen.`
};


var $1c40ffbbfe9f3bda$exports = {};
$1c40ffbbfe9f3bda$exports = {
    "removeButtonLabel": `Usuń`,
    "removeDescription": `Naciśnij Usuń, aby usunąć znacznik.`
};


var $156880e329b1c717$exports = {};
$156880e329b1c717$exports = {
    "removeButtonLabel": `Remover`,
    "removeDescription": `Pressione Delete para remover a tag.`
};


var $b6d50b1d20768ce4$exports = {};
$b6d50b1d20768ce4$exports = {
    "removeButtonLabel": `Eliminar`,
    "removeDescription": `Prima Delete para eliminar a tag.`
};


var $d8c38c691b006187$exports = {};
$d8c38c691b006187$exports = {
    "removeButtonLabel": `Îndepărtaţi`,
    "removeDescription": `Apăsați pe Delete (Ștergere) pentru a elimina eticheta.`
};


var $ed9b4bf7ce1fb1d7$exports = {};
$ed9b4bf7ce1fb1d7$exports = {
    "removeButtonLabel": `Удалить`,
    "removeDescription": `Нажмите DELETE, чтобы удалить тег.`
};


var $51d8721afda4d678$exports = {};
$51d8721afda4d678$exports = {
    "removeButtonLabel": `Odstrániť`,
    "removeDescription": `Ak chcete odstrániť značku, stlačte kláves Delete.`
};


var $fd37a27baae493e8$exports = {};
$fd37a27baae493e8$exports = {
    "removeButtonLabel": `Odstrani`,
    "removeDescription": `Pritisnite Delete, da odstranite oznako.`
};


var $5505a1ca71ffd6f4$exports = {};
$5505a1ca71ffd6f4$exports = {
    "removeButtonLabel": `Ukloni`,
    "removeDescription": `Pritisnite Obriši da biste uklonili oznaku.`
};


var $33670e148c84ad02$exports = {};
$33670e148c84ad02$exports = {
    "removeButtonLabel": `Ta bort`,
    "removeDescription": `Tryck på Radera för att ta bort taggen.`
};


var $0bf46fdcdd7cb5f6$exports = {};
$0bf46fdcdd7cb5f6$exports = {
    "removeButtonLabel": `Kaldır`,
    "removeDescription": `Etiketi kaldırmak için Sil tuşuna basın.`
};


var $9d9765222bc08ca2$exports = {};
$9d9765222bc08ca2$exports = {
    "removeButtonLabel": `Вилучити`,
    "removeDescription": `Натисніть Delete, щоб вилучити тег.`
};


var $d737296cedcdee9f$exports = {};
$d737296cedcdee9f$exports = {
    "removeButtonLabel": `删除`,
    "removeDescription": `按下“删除”以删除标记。`
};


var $09cd168ab18773f4$exports = {};
$09cd168ab18773f4$exports = {
    "removeButtonLabel": `移除`,
    "removeDescription": `按 Delete 鍵以移除標記。`
};


$3bb15cc24d006ec5$exports = {
    "ar-AE": $84925f526f90eebd$exports,
    "bg-BG": $c0650163dc1b6f9d$exports,
    "cs-CZ": $b2b55661291de587$exports,
    "da-DK": $deb83970956f6d5b$exports,
    "de-DE": $aea1cb4c7ec97e1c$exports,
    "el-GR": $3618d917e503a8d3$exports,
    "en-US": $9eb56bbbe8e31294$exports,
    "es-ES": $361c604b0fc269a3$exports,
    "et-EE": $2f00170f4ee3ca01$exports,
    "fi-FI": $80ee16b64fab9fb5$exports,
    "fr-FR": $be9d354476c08087$exports,
    "he-IL": $ffeb903ba092eb35$exports,
    "hr-HR": $1df6722c6f19728b$exports,
    "hu-HU": $093d57e325bc9071$exports,
    "it-IT": $609dbdfbcad85bdb$exports,
    "ja-JP": $c08e84f882644048$exports,
    "ko-KR": $5cd130489822fa21$exports,
    "lt-LT": $ab5183739b6c5e7e$exports,
    "lv-LV": $dd84a0b574be3f23$exports,
    "nb-NO": $85eee97d14eef7b5$exports,
    "nl-NL": $18781839f93b0314$exports,
    "pl-PL": $1c40ffbbfe9f3bda$exports,
    "pt-BR": $156880e329b1c717$exports,
    "pt-PT": $b6d50b1d20768ce4$exports,
    "ro-RO": $d8c38c691b006187$exports,
    "ru-RU": $ed9b4bf7ce1fb1d7$exports,
    "sk-SK": $51d8721afda4d678$exports,
    "sl-SI": $fd37a27baae493e8$exports,
    "sr-SP": $5505a1ca71ffd6f4$exports,
    "sv-SE": $33670e148c84ad02$exports,
    "tr-TR": $0bf46fdcdd7cb5f6$exports,
    "uk-UA": $9d9765222bc08ca2$exports,
    "zh-CN": $d737296cedcdee9f$exports,
    "zh-TW": $09cd168ab18773f4$exports
};





function $fc6126c82a4601f1$export$3f568fff7dff2f03(props, state, ref) {
    let { item: item  } = props;
    let stringFormatter = (0, $aIvin$useLocalizedStringFormatter)((0, (/*@__PURE__*/$parcel$interopDefault($3bb15cc24d006ec5$exports))));
    let buttonId = (0, $aIvin$useId)();
    let { onRemove: onRemove  } = (0, $d7323bca8d074eeb$export$653eddfc964b0f8a).get(state) || {};
    let { rowProps: rowProps , gridCellProps: gridCellProps , ...states } = (0, $aIvin$useGridListItem)({
        node: item
    }, state, ref);
    // We want the group to handle keyboard navigation between tags.
    delete rowProps.onKeyDownCapture;
    delete states.descriptionProps;
    let onKeyDown = (e)=>{
        if (e.key === "Delete" || e.key === "Backspace") {
            e.preventDefault();
            if (state.selectionManager.isSelected(item.key)) onRemove(new Set(state.selectionManager.selectedKeys));
            else onRemove(new Set([
                item.key
            ]));
        }
    };
    let modality = (0, $aIvin$useInteractionModality)();
    if (modality === "virtual" && typeof window !== "undefined" && "ontouchstart" in window) modality = "touch";
    let description = onRemove && (modality === "keyboard" || modality === "virtual") ? stringFormatter.format("removeDescription") : "";
    let descProps = (0, $aIvin$useDescription)(description);
    let isFocused = item.key === state.selectionManager.focusedKey;
    // @ts-ignore - data attributes are ok but TS doesn't know about them.
    let domProps = (0, $aIvin$filterDOMProps)(props);
    return {
        removeButtonProps: {
            "aria-label": stringFormatter.format("removeButtonLabel"),
            "aria-labelledby": `${buttonId} ${rowProps.id}`,
            id: buttonId,
            onPress: ()=>onRemove ? onRemove(new Set([
                    item.key
                ])) : null,
            excludeFromTabOrder: true
        },
        rowProps: (0, $aIvin$mergeProps)(rowProps, domProps, {
            tabIndex: isFocused || state.selectionManager.focusedKey == null ? 0 : -1,
            onKeyDown: onRemove ? onKeyDown : undefined,
            "aria-describedby": descProps["aria-describedby"]
        }),
        gridCellProps: (0, $aIvin$mergeProps)(gridCellProps, {
            "aria-errormessage": props["aria-errormessage"],
            "aria-label": props["aria-label"]
        }),
        ...states,
        allowsRemoving: !!onRemove
    };
}





export {$fc6126c82a4601f1$export$3f568fff7dff2f03 as useTag, $d7323bca8d074eeb$export$4f8b5cda58b7e8ff as useTagGroup};
//# sourceMappingURL=module.js.map
